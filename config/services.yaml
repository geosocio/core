# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    env(DATABASE_URL): 'sqlite:///%kernel.project_dir%/var/data/data.db'
    env(JWT_PRIVATE_KEY_PATH): 'config/jwt/private.pem'
    env(JWT_PUBLIC_KEY_PATH): 'config/jwt/public.pem'
    env(JWT_PASSPHRASE): ''
    env(MAPZEN_API_KEY): ''
    env(SENDGRID_API_KEY): ''

services:
    app.controller:
        abstract:  true
        arguments:
            - '@app.denormalizer'
            - '@doctrine'
            - '@geosocio_entity_attacher'
            - '@security.authorization_checker'

    app.controller_default:
        parent: app.controller
        class: App\Controller\DefaultController

    app.controller_auth:
        parent: app.controller
        class: App\Controller\AuthController
        arguments:
            - "@app.verification_manager"
            - '@lexik_jwt_authentication.jwt_manager'

    app.controller_user:
        parent: app.controller
        class: App\Controller\UserController
        arguments:
            - "@app.verification_manager"
            - '@app.place_finder'

    app.controller_place:
        parent: app.controller
        class: App\Controller\PlaceController

    app.controller_post:
        parent: app.controller
        class: App\Controller\PostController

    app.controller_site:
        parent: app.controller
        class: App\Controller\SiteController

    app.group_resolver:
      class: App\GroupResolver\GroupResolver
      arguments:
        - '@security.token_storage'

    app.request_group_resolver:
      parent: app.group_resolver
      class: App\GroupResolver\RequestGroupResolver
      tags:
          - { name: geosocio_http_serializer.request_group_resolver }

    app.response_group_resolver:
      parent: app.group_resolver
      class: App\GroupResolver\ResponseGroupResolver
      tags:
          - { name: geosocio_http_serializer.response_group_resolver }

    app.user_voter:
        class: App\Security\UserVoter
        tags:
          - { name: security.voter }

    app.post_voter:
        class: App\Security\PostVoter
        tags:
          - { name: security.voter }

    app.denormalizer:
        class: App\Serializer\Denormalizer
        arguments:
            - '@serializer'
            - '@validator'
            - '@app.group_resolver'

    app.tree_maker:
        class: App\EventListener\TreeMaker
        public: false
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }

    app.verification_manager:
         class: App\Utils\User\VerificationManager

    app.verification_email:
        class: App\Utils\User\EmailVerification
        public: false
        arguments:
            - '@doctrine'
            - '@app.ircmaxell_random'
            - '@app.dispatcher_email'
            - '@request_stack'
        tags:
            - { name: app.verification, type: email }

    app.dispatcher_email:
        class: App\Utils\Dispatcher\EmailDispatcher
        arguments:
            - '@app.sendgrid'

    app.place_finder:
        class: App\Utils\PlaceFinder
        arguments:
            - '@doctrine'
            - '@app.client_mapzen_search'
            - '@app.client_mapzen_whos_on_first'
            - '@geosocio_slugger'

    app.sendgrid:
        class: SendGrid
        arguments:
            - '%env(SENDGRID_API_KEY)%'

    app.ircmaxell_random_factory:
        class: RandomLib\Factory

    app.ircmaxell_random:
        class: RandomLib\Generator
        factory: ["@app.ircmaxell_random_factory", getMediumStrengthGenerator]

    app.client_mapzen_search:
        class: App\Client\Mapzen\Search
        arguments:
            - '@app.guzzle_client_mapzen_search'
            - '@serializer'

    app.client_mapzen_whos_on_first:
        class: App\Client\Mapzen\WhosOnFirst
        arguments:
            - '@app.guzzle_client_mapzen_whos_on_first'
            - '@serializer'

    app.serializer_mapzen_search:
        class: App\Serializer\Mapzen\SearchDenormalizer
        public: false
        tags:
            - { name: serializer.normalizer }

    app.serializer_mapzen_whos_on_first:
        class: App\Serializer\Mapzen\WhosOnFirstDenormalizer
        public: false
        tags:
            - { name: serializer.normalizer }

    app.event.jwt_created_listener:
      class: App\EventListener\JWTCreatedEventListener
      arguments:
        - '@serializer'
      tags:
          -
            name: kernel.event_listener
            event: lexik_jwt_authentication.on_jwt_created
            method: onJWTCreated

    app.guzzle_client_mapzen_search:
        class: GuzzleHttp\Client
        arguments:
            -
                base_url: https://search.mapzen.com/v1/
                defaults:
                    query:
                        api_key: '%env(MAPZEN_API_KEY)%'

    app.guzzle_client_mapzen_whos_on_first:
        class: GuzzleHttp\Client
        arguments:
            -
                base_url: https://whosonfirst-api.mapzen.com
                defaults:
                    query:
                        api_key: '%env(MAPZEN_API_KEY)%'
